# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
pr:
- '*'
trigger:
- main

jobs:
  # Run Infracost on pull requests
  - job: infracost_pull_request_checks
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    displayName: Run Infracost on pull requests
    pool:
      vmImage: ubuntu-latest

    steps:
    - checkout: self
      persistCredentials: true
      fetchDepth: 0
    - task: InfracostSetup@2
      inputs:
        apiKey: 'ico-0LLqDR3ojP26GDGA1ShYcCTOEMiOHrrk'
        version: '0.10.34'

    - script: |
        git clone $(Build.Repository.Uri) --branch=main --single-branch /tmp/base
      displayName: Checkout base branch

    # Generate an Infracost cost estimate baseline from the comparison branch, so that Infracost can compare the cost difference.
    - bash: |
        ls
        cat /tmp/infracost-base.json
        pwd
        cd /tmp/base
        infracost breakdown --path . \
          --format=json \
          --out-file=/tmp/infracost-base.json
      displayName: Generate Infracost cost estimate baseline

    # Generate an Infracost diff and save it to a JSON file..
    - bash: |
        cd -
        pwd
        infracost diff --path . --compare-to /tmp/infracost-base.json --out-file /tmp/infracost.json
        # infracost diff --path=. \
        #   --format=json \
        #   --compare-to=/tmp/infracost-base.json \
        #   --out-file=/tmp/infracost.json
        ls /tmp
      displayName: Generate Infracost diff
      #################################################
    - script: |
        curl -sSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt-get update
        sudo apt-get install gh
      displayName: 'Install GitHub CLI'

    - script: |
        echo tocken = $(GITHUBTOCKEN)
        echo $(GITHUBTOCKEN) > token
        gh auth login --with-token < token
      displayName: 'Authenticate with GitHub'

    - script: |
        gh pr comment $(System.PullRequest.PullRequestNumber) -R $(Build.Repository.Uri) -F /tmp/infracost.json
      displayName: 'Post comment on pull request'

    - powershell: |
        # Read the contents of the Infracost JSON report file
        $infracostReport = Get-Content -Raw -Path 'path/to/infracost-report.json' | ConvertFrom-Json

        # Extract relevant information from the Infracost report
        $summary = $infracostReport.summary
        $totalHourlyCost = $summary.totalHourlyCost
        $totalMonthlyCost = $summary.totalMonthlyCost

        # Generate the message to be sent to Slack
        $message = @"
        Infracost Report Summary:
        Total Hourly Cost: $($totalHourlyCost)
        Total Monthly Cost: $($totalMonthlyCost)
        "@

        # Set the message as an environment variable
        Write-Host "##vso[task.setvariable variable=infracostMessage]$message"
      displayName: 'Read Infracost Report and Generate Message' 
    - task: SlackNotification@6
      inputs:
        SlackApiToken: $(SLACKTOCKEN)
        MessageAuthor: 'Azure DevOps'
        Channel: '#test-channel'
        NotificationType: 'ChatMessage'
        # UseVariableForMessage: true
        Message: |
          $(infracostMessage)

      env:
        SLACKTOCKEN : $(GITHUBTOCKEN)    
        # FooterText: 'aaaaaaaaaaaaaaaa'

    # - task: SlackNotification@6
    #   inputs:
    #     SlackApiToken: 'asdas'
    #     MessageAuthor: 'Azure DevOps'
    #     Channel: 'asdas'
    #     NotificationType: 'ChatMessage'
    #     UseVariableForMessage: true
    #     FooterText: 'aaaaaaaaaaaaaaaa'